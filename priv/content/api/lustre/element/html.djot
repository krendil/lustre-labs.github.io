title = "lustre/element/html"
route = "/api/lustre/element/html"

description = ""

---

# lustre/element/html

## Main Root

{api}
{target=erlang javascript}
### html

```gleam
pub fn html(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Document Metadata

{api}
{target=erlang javascript}
### base

```gleam
pub fn base(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### head

```gleam
pub fn head(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### link

```gleam
pub fn link(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### meta

```gleam
pub fn meta(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### style

```gleam
pub fn style(attrs: List(Attribute(msg)), css: String) -> Element(msg)
```

{api}
{target=erlang javascript}
### title

```gleam
pub fn title(attrs: List(Attribute(msg)), content: String) -> Element(msg)
```

## Sectioning root

{api}
{target=erlang javascript}
### body

```gleam
pub fn body(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Content sectioning

{api}
{target=erlang javascript}
### address

```gleam
pub fn address(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### article

```gleam
pub fn article(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### aside

```gleam
pub fn aside(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### footer

```gleam
pub fn footer(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### header

```gleam
pub fn header(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h1

```gleam
pub fn h1(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h2

```gleam
pub fn h2(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h3

```gleam
pub fn h3(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h4

```gleam
pub fn h4(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h5

```gleam
pub fn h5(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### h6

```gleam
pub fn h6(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### hgroup

```gleam
pub fn hgroup(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### main

```gleam
pub fn main(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### nav

```gleam
pub fn nav(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### section

```gleam
pub fn section(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### search

```gleam
pub fn search(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Text content

{api}
{target=erlang javascript}
### blockquote

```gleam
pub fn blockquote(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### dd

```gleam
pub fn dd(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### div

```gleam
pub fn div(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### dl

```gleam
pub fn dl(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### dt

```gleam
pub fn dt(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### figcaption

```gleam
pub fn figcaption(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### figure

```gleam
pub fn figure(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### hr

```gleam
pub fn hr(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### li

```gleam
pub fn li(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### menu

```gleam
pub fn menu(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### ol

```gleam
pub fn ol(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### p

```gleam
pub fn p(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### pre

```gleam
pub fn pre(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### ul

```gleam
pub fn ul(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Inline text semantics

{api}
{target=erlang javascript}
### a

```gleam
pub fn a(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### abbr

```gleam
pub fn abbr(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### b

```gleam
pub fn b(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### bdi

```gleam
pub fn bdi(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### bdo

```gleam
pub fn bdo(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### br

```gleam
pub fn br(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### cite

```gleam
pub fn cite(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### code

```gleam
pub fn code(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### data

```gleam
pub fn data(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### dfn

```gleam
pub fn dfn(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### em

```gleam
pub fn em(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### i

```gleam
pub fn i(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### kbd

```gleam
pub fn kbd(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### mark

```gleam
pub fn mark(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### q

```gleam
pub fn q(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### rp

```gleam
pub fn rp(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### rt

```gleam
pub fn rt(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### ruby

```gleam
pub fn ruby(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### s

```gleam
pub fn s(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### samp

```gleam
pub fn samp(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### small

```gleam
pub fn small(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### span

```gleam
pub fn span(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### strong

```gleam
pub fn strong(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### sub

```gleam
pub fn sub(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### sup

```gleam
pub fn sup(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### time

```gleam
pub fn time(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### u

```gleam
pub fn u(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### var

```gleam
pub fn var(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### wbr

```gleam
pub fn wbr(attrs: List(Attribute(msg))) -> Element(msg)
```

## Image and multimedia

{api}
{target=erlang javascript}
### area

```gleam
pub fn area(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### audio

```gleam
pub fn audio(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### img

```gleam
pub fn img(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### map

```gleam
pub fn map(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### track

```gleam
pub fn track(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### video

```gleam
pub fn video(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Embedded content

{api}
{target=erlang javascript}
### embed

```gleam
pub fn embed(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### iframe

```gleam
pub fn iframe(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### object

```gleam
pub fn object(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### picture

```gleam
pub fn picture(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### portal

```gleam
pub fn portal(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### source

```gleam
pub fn source(attrs: List(Attribute(msg))) -> Element(msg)
```

## SVG and MathML

{api}
{target=erlang javascript}
### svg

````gleam
pub fn svg(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)

{api}
{target=erlang javascript}
### math

```gleam
pub fn math(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
````

## Scripting

{api}
{target=erlang javascript}
### canvas

```gleam
pub fn canvas(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### noscript

```gleam
pub fn noscript(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### script

```gleam
pub fn script(attrs: List(Attribute(msg)), js: String) -> Element(msg)
```

## Demarcating edits

{api}
{target=erlang javascript}
### del

```gleam
pub fn del(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### ins

```gleam
pub fn ins(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Table content

{api}
{target=erlang javascript}
### caption

```gleam
pub fn caption(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### col

```gleam
pub fn col(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### colgroup

```gleam
pub fn colgroup(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### table

```gleam
pub fn table(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### tbody

```gleam
pub fn tbody(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### td

```gleam
pub fn td(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### tfoot

```gleam
pub fn tfoot(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### th

```gleam
pub fn th(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### thead

```gleam
pub fn thead(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### tr

```gleam
pub fn tr(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Forms

{api}
{target=erlang javascript}
### button

```gleam
pub fn button(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### datalist

```gleam
pub fn datalist(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### fieldset

```gleam
pub fn fieldset(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### form

```gleam
pub fn form(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### input

```gleam
pub fn input(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### label

```gleam
pub fn label(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### legend

```gleam
pub fn legend(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### meter

```gleam
pub fn meter(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### optgroup

```gleam
pub fn optgroup(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### option

```gleam
pub fn option(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### output

```gleam
pub fn output(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### progress

```gleam
pub fn progress(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### select

```gleam
pub fn select(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### textarea

```gleam
pub fn textarea(attrs: List(Attribute(msg))) -> Element(msg)
```

## Interactive elements

{api}
{target=erlang javascript}
### details

```gleam
pub fn details(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### dialog

```gleam
pub fn dialog(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

{api}
{target=erlang javascript}
### summary

```gleam
pub fn summary(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```

## Web components

{api}
{target=erlang javascript}
### slot

```gleam
pub fn slot(attrs: List(Attribute(msg))) -> Element(msg)
```

{api}
{target=erlang javascript}
### template

```gleam
pub fn template(
  attrs: List(Attribute(msg)),
  children: List(Element(msg)),
) -> Element(msg)
```
