html,
body {
  font-family: Inter, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}

body > * {
  max-width: 140ch;
  margin: 0 auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: Fraunces, "Times New Roman", Times, serif;
}

h1 {
  font-size: var(--text-3xl);
}

h2 {
  font-size: var(--text-2xl);
}

h3 {
  font-size: var(--text-xl);
}

h4,
h5,
h6 {
  font-size: var(--text-lg);
}

a[href]:hover {
  text-decoration: underline;
}

pre:has(code) {
  background-color: var(--app-background-subtle);
  border-radius: var(--border-radius);
}

pre code {
  display: block;
  overflow-x: auto;
  font-size: var(--text-md);

  /*  Remove any additional styles slapped on by hljs */
  padding: 0 !important;
  background: transparent !important;
}

/* MOBILE NAV --------------------------------------------------------------- */

/* Sets the parent of the .dropdown side bar to be a container. */
*:has(.dropdown) {
  container-name: dropdown;
  container-type: inline-size;
}

.dropdown .toggle {
  display: none;
}

/* When the dropdown container is 100% of its parent container, this query will
kick in. */
@container dropdown (inline-size: 100cqi) {
  .dropdown {
    background-color: var(--app-background);
    box-shadow: var(--shadow-md);
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    max-height: 50vh;
  }

  .dropdown .toggle {
    display: block;
  }

  /* Although this selector looks kind of funky, it's written this way so that
  we don't have to know what the display property of these navs is set to 
  normally. */
  .dropdown:has(.toggle input:not(:checked)) nav {
    display: none;
  }
}

/* HAMBURGER MENU BUTTON ---------------------------------------------------- */

.toggle {
  --bg-hover: var(--element-background);
  --border: var(--element-border-subtle);
  --text: var(--text-high-contrast);
  --padding: var(--space-xs);

  position: relative;
  outline: 1px solid transparent;
  border-radius: var(--border-radius);
  color: var(--text);
  padding: var(--padding) var(--padding);

  &:hover,
  &:active {
    background-color: var(--bg-hover);
  }

  &:focus-within {
    outline-color: var(--border);
  }

  & > input {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  & > .close,
  & > input:checked ~ .open {
    display: none;
  }

  & > .open,
  & > input:checked ~ .close {
    display: block;
  }
}
